!function(){"use strict";var i='<li class="col-md-6 file-upload-cont"><div class="file-upload"><div class="file-media js-file-msg"><div class="file-media-left"><img class="media-object js-file-image" src="" alt="..."></div><div class="file-media-body"><div class="file-media-main"><h4 class="file-media-heading js-file-name"></h4><div class="upload-body"><span class="memory js-file-size"></span><span class="percent js-file-process"></span></div></div></div></div><div class="float-upload js-file-opt"><div class="float-upload-cont"><div class="col-md-4"><a class="js-file-down"><i class="glyphicon glyphicon-download-alt"></i><span>下载</span></a></div><div class="col-md-4"><a class="js-file-read"><i class="glyphicon glyphicon-eye-open"></i><span>查看</span></a></div><div class="col-md-4"><a class="js-file-del"><i class="glyphicon glyphicon-trash"></i><span>删除</span></a></div></div></div></div></li>';$.widget("ui.bssfileshow",{options:{name:"",url:"",size:"",upprocess:0,imagePath:"",downfile:$.noop,readfile:$.noop,delfile:$.noop},_create:function(){this.element.append(i),this.$fileMsg=$(".js-file-msg"),this.$fileImage=$(".js-file-image"),this.$fileName=$(".js-file-name"),this.$fileSize=$(".js-file-size"),this.$fileProcess=$(".js-file-process"),this.$fileOpt=$(".js-file-opt"),this.$fileDown=$(".js-file-down"),this.$fileRead=$(".js-file-read"),this.$fileDel=$(".js-file-del")},_init:function(){this._checkFileImage(),this.$fileImage.attr("src",this.options.imagePath),this.$fileName.html(this.options.name),this.$fileSize.html(this.options.size),this._bindEvent(),this.$fileOpt.hide(),this.element.show()},_checkFileImage:function(){var i="image/colorlump-",e=this.options.name;i+=/(?:jpg|gif|png|jpeg)$/i.test(e)?"images":/(?:mp3|mp4)$/i.test(e)?"audio":/(?:pdf)$/i.test(e)?"pdf":/(?:doc|docx)$/i.test(e)?"docx":/(?:xls|xlsx)$/i.test(e)?"xls":"other",this.options.imagePath=i+"@2x.png"},_bindEvent:function(){this._on(this.$fileMsg,{mouseenter:"_fileMsgMouseenter"}),this._on(this.$fileOpt,{"mouseleave ":"_fileMsgMouseleave"}),this._on(this.$fileDown,{click:"_downLoadFile"}),this._on(this.$fileRead,{click:"_readFile"}),this._on(this.$fileDel,{click:"_delFile"})},_downLoadFile:function(i){console.log("_downLoadFile..."),this._trigger("downfile",i,this.url)},_readFile:function(i){console.log("_readFile..."),this._trigger("readfile",i,this.url)},_delFile:function(i){console.log("_delFile..."),this._trigger("delfile",i,this.url)},_fileMsgMouseenter:function(){console.log("_fileMsgMouseenter..."),this.$fileOpt.show()},_fileMsgMouseleave:function(){console.log("_fileMsgMouseleave..."),this.$fileOpt.hide()},setFileProcess:function(i){this.options.upprocess=i,this.$fileProcess.html(i+"%已上传")}})}();
!function(){"use strict";var t='<ul class="flowaxis"></ul>',i='<li class="flowaxis-item row"><div class="col-sm-2 flowaxis-item-col"><div class="flowaxis-item-title"><div class="flowaxis-item-num-dot"></div><span class="flowaxis-item-span-widget"></span></div></div><div class="col-sm-10 flowaxis-item-col"><div class="flowaxis-item-main"></div></div></li>',e='<div class="flowaxis-item-content" name="content"><div class="flowaxis-item-heading"><span class="flowaxis-text-title-widget"></span><span class="text-primary"></span><span class="pull-right flowaxis-item-tools"></span></div><div class="flowaxis-item-body"></div></div>',a='<div class="flowaxis-item-reply"></div>',n='<div class="flowaxis-item-content"><div class="flowaxis-item-heading"><span class="flowaxis-text-title-widget"></span><span class="text-primary"></span><span class="pull-right flowaxis-item-tools"></span></div><div class="flowaxis-item-body"></div></div>',d=[],s=[];$.widget("ui.bssflowaxis",{options:{dataSource:[]},_create:function(){this._initWidget()},_initWidget:function(){var i=this.options;this.flowLength=0,i.dataSource&&i.dataSource.length>0&&(this.flowLength=i.dataSource.length);var e=$(t);this._addTopNodes(e,this.flowLength);for(var a=0;a<s.length;a++)this._addNodes(e,d,s[a]);this.element.append(e),d=[],s=[]},_addTopNodes:function(t,a){for(var n=this.options,o=0,l=0;l<a;l++){var m=n.dataSource[l].pid;"-1"==m?(t.append(i),t.find("li").eq(o).attr("id",n.dataSource[l].id+"_li"),t.find(".flowaxis-item-main").eq(o).attr("id",n.dataSource[l].id+"_itemMain"),t.find(".flowaxis-item-num-dot:eq("+o+")").text(n.dataSource[l].itemNum),t.find(".flowaxis-item-span-widget:eq("+o+")").text(n.dataSource[l].itemName),t.find(".flowaxis-item-main").eq(o).append(e),t.find(".flowaxis-item-content").eq(o).attr("id",n.dataSource[l].id+"_itemContent"),t.find(".flowaxis-item-main").eq(o).find('.flowaxis-item-content[name="content"]').eq(0).find(".flowaxis-text-title-widget").eq(0).text(n.dataSource[l].itemContent.itemHeading),t.find(".flowaxis-item-main").eq(o).find('.flowaxis-item-content[name="content"]').eq(0).find(".text-primary").eq(0).text(n.dataSource[l].itemContent.itemTextPrimary),t.find(".flowaxis-item-main").eq(o).find('.flowaxis-item-content[name="content"]').eq(0).find(".flowaxis-item-tools").eq(0).text(n.dataSource[l].itemContent.itemTime),t.find(".flowaxis-item-main").eq(o).find('.flowaxis-item-content[name="content"]').eq(0).find(".flowaxis-item-body").eq(0).text(n.dataSource[l].itemContent.itemBody),s.push(n.dataSource[l]),o++):d.push(n.dataSource[l])}o=0},_createNode:function(t,i,e,d){var s=e.pid,o=t.find("#"+s+"_itemContent"),l=$(a).attr("id",e.id+"_reply"),m=$(n).attr("id",e.id+"_itemContent");l.append(m),l.insertAfter(o),t.find("#"+e.id+"_itemContent").find(".flowaxis-text-title-widget").eq(0).text(e.itemContent.itemHeading),t.find("#"+e.id+"_itemContent").find(".text-primary").eq(0).text(e.itemContent.itemTextPrimary),t.find("#"+e.id+"_itemContent").find(".flowaxis-item-tools").eq(0).text(e.itemContent.itemTime),t.find("#"+e.id+"_itemContent").find(".flowaxis-item-body").eq(0).text(e.itemContent.itemBody),this._addNodes(t,i,e)},_addNodes:function(t,i,e){var a=0,n=i.length;for(a;a<n;a++){var d=i[a].pid;if(d==e.id){var s=i[a];if(s._p=e,s._ai=a,this._checkIsHaveChildAndLast(s,i),this._createNode(t,i,s,a),s.ls)break}}},_checkIsHaveChildAndLast:function(t,i){for(var e,a=0;a<i.length;a++)i[a].pid==t.id&&(t.hasChild=!0),i[a].pid==t.pid&&(e=i[a].id);e==t.id&&(t.ls=!0)},reloadData:function(t){var i=this;this.element.empty(),this.options.dataSource=t,i._initWidget()}})}();
!function(){"use strict";var i='<img style="display:none" class="media-object" src="" alt="..."><div class="picture-upload"><div class="picture-upload-cont"><p>0%</p><div class="loading-box"><span class="load"></span></div><p>正在上传</p></div></div>';$.widget("ui.bssimgshow",{options:{name:"",url:"",size:"",upprocess:0,imagePath:"",downfile:$.noop,readfile:$.noop,delfile:$.noop},_create:function(){this.element.prepend(i)},_init:function(){this._checkFileImage(),this._bindEvent()},_checkFileImage:function(){var i="image/colorlump-",e=this.options.name;i+=/(?:jpg|gif|png|jpeg)$/i.test(e)?"images":/(?:mp3|mp4)$/i.test(e)?"audio":/(?:pdf)$/i.test(e)?"pdf":/(?:doc|docx)$/i.test(e)?"docx":/(?:xls|xlsx)$/i.test(e)?"xls":"other",this.options.imagePath=i+"@2x.png"},_bindEvent:function(){$(".picture-upload.clearfix>ul>li>.picture-upload>.picture-upload-cont>.picture-upload-btn:first");this._on($(".picture-upload.clearfix>ul>li"),{mouseenter:"_fileMsgMouseenter"}),this._on($(".picture-upload.clearfix>ul>li"),{mouseleave:"_fileMsgMouseleave"}),this._on($(".picture-upload.clearfix>ul>li>.picture-upload>.picture-upload-cont>.picture-upload-btn:first"),{click:"_downLoadFile"}),this._on(this.$fileRead,{click:"_readFile"}),this._on(this.$fileDel,{click:"_delFile"})},_downLoadFile:function(i){console.log("_downLoadFile..."),this._trigger("downfile",i,this.options.url+"?getfile="+this.options.name)},_readFile:function(i){console.log("_readFile..."),this._trigger("readfile",i,this.url)},_delFile:function(i){console.log("_delFile..."),this._trigger("delfile",i,this.url)},_fileMsgMouseenter:function(i){$(i.target).next(".picture-upload").show()},_fileMsgMouseleave:function(i){$(i.target),$(i.target).closest("li");$(i.target).closest("li").find(".picture-upload").hide()},setFileProcess:function(i){i>=0&&i<100?$(".picture-upload.clearfix>ul>li:nth-child(2)>.picture-upload>.picture-upload-cont>p:nth-child(1)").text(i+"%"):100==i&&(this.element.empty().html('<img style="display:none" class="media-object" src="" alt="..."><div class="picture-upload"><div class="picture-upload-cont"><a class="picture-upload-btn"><i class="glyphicon glyphicon-download-alt"></i><span>下载</span></a><a class="picture-upload-btn"><i class="glyphicon glyphicon-trash"></i><span>删除</span></a></div></div>'),this._bindEvent())}})}();
!function(){"use strict";$.widget("ui.bssmenunav",{options:{scrollThreshold:.1,scrollSpeed:700,scrollTopBorder:500,easing:"swing",delayDetection:100,navwinArr:[],scrollChange:function(){}},_init:function(){var s=this.options;s.navWin||s.navwinArr?(this.$win=s.targetWin?s.targetWin:$(window),this.$h=s.navwinArr,this.$pageNavList=s.navWin,this.$pageNavListLis="",this.$curTag="",this.$pageNavListLiH="",this.offArr=[],this.curIndex=0,this.scrollIng=!1,this.scrollToBottom=!1,this._make(),this._setArr(),this._bindEvent()):console.error("menunav cannot init！please check")},_make:function(){var s='<div class="directory-main">';s+='<div class="directory-search"><div class="input-group">',s+='<input type="text" class="form-control js-search-input" placeholder="搜索选项">',s+='<span class="input-group-addon js-search-btn"><span class="glyphicon glyphicon-search"></span></span>',s+="</div></div>",s+='<div class="directory-list"><ul></ul><span class="cur-tag"></span></div></div>',this.$pageNavList.append(s),this.$searchInput=this.$pageNavList.find("input.js-search-input"),this.$searchBtn=this.$pageNavList.find("span.js-search-btn");var i=this.$h,t=[],o=0,n=0;i.each(function(s){var i=$(this),a=i.attr("title");i.hasClass("first")?(o++,o%2==0&&(n=0),t.push('<li class="l1"><span class="c-dot"></span>'+o+'. <a class="l1-text">'+a+"</a></li>")):(n++,t.push('<li class="l2"><span class="sub-c-dot"></span>'+o+"."+n+' <a class="l2-text">'+a+"</a></li>"))}),this.$pageNavList.find("ul").html(t.join("")),this.$pageNavListLis=this.$pageNavList.find("li"),this.$curTag=this.$pageNavList.find(".cur-tag"),this.$pageNavListLiH=this.$pageNavListLis.eq(0).height(),this.$pageNavList.show();var a=this.$pageNavList.find(".directory-main");a.css("position","fixed"),a.css("width",this.$pageNavList.width()),a.css("top",this.$pageNavList.offset().top),a.css("left",this.$pageNavList.offset().left)},_setArr:function(){var s=this;this.$h.each(function(){var i=$(this),t=Math.round(i.offset().top)-112;s.offArr.push(t)}),this._ifPos(0)},_posTag:function(s){this.$curTag.css({top:s+"px"})},_ifPos:function(s){var i=this.offArr;this.scrollToBottom&&(s=this.curIndex>0?i[this.curIndex]:i[i.length-1]);for(var t=0;t<i.length;t++)i[t]<=s&&this._scollToIndex(t);this.curIndex=0},_scollToIndex:function(s){var i=this.$pageNavListLis.eq(s),t=i.position().top;i.addClass("cur").siblings("li").removeClass("cur"),this._posTag(t+.5*this.$pageNavListLiH)},_bindEvent:function(){var s=this,i=0;this.$win.on("scroll",function(){var t=$(this);clearTimeout(i),i=setTimeout(function(i){s.scrollIng=!0,s.scrollToBottom=t.scrollTop()+t.height()>=$(document).height(),t.scrollTop()>=s.options.scrollTopBorder&&(s._trigger("scrollchange",i,t.scrollTop()),s._ifPos(t.scrollTop()))},s.options.delayDetection)}),this.$pageNavList.on("click","li",function(i){var t=$(this),o=t.index();s.curIndex=o,s.scrollToBottom&&s.$win.scrollTop()<=s.offArr[o]?s._scollToIndex(o):s._scrollTo(s.offArr[o]),s._trigger("navclick",i,o)}),this.$searchBtn.on("click",function(){var i=s.$searchInput.val();""===i?s._scrollTo(s.offArr[0]):s.$pageNavListLis.each(function(t){var o=$(this),n=o.find("a").html();if(n.indexOf(i)!=-1)return s._scrollTo(s.offArr[t]),!1})})},_scrollTo:function(s,i){var t=this;this.$win.animate({scrollTop:s},this.options.scrollSpeed,this.options.easing,function(){t.scrollIng=!1}),$("html,body").animate({scrollTop:s},this.options.scrollSpeed,this.options.easing,function(){t.scrollIng=!1})}})}();
!function(){"use strict";var t='<div class="left" style="display: none;">        <button btn="left" type="button" class="btn btn-default">        <span class="glyphicon glyphicon-menu-left"></span>        </button>        </div>',i='<div class="right" style="display: none;">        <button btn="right" type="button" class="btn btn-default">        <span class="glyphicon glyphicon-menu-right"></span>        </button>        </div>',e='<div class="step-cont"></div>',s='<ul class="row clearfix"></ul>',n='<li class="col-md-2 col-sm-4">        <i class="step-mid-line"></i>        <div class="step-dot-cont"><span class="step-dot"><i class="glyphicon glyphicon-ok"></i></span></div>        <div class="step-title"></div>        <div class="step-time"></div>        </li>';$.widget("ui.bsstimestep",{options:{dataSource:[]},_resize:function(){var t=$(window).outerWidth();t>=992?this.display_count=6:t>=768?this.display_count=3:t<768&&(this.display_count=1);var i=this;$(window).resize(function(t){var e=$(window).outerWidth();e>=992?i.display_count=6:e>=768?i.display_count=3:e<768&&(i.display_count=1),i._handle()}),this._handle()},_handle:function(){var t=this.options,i=this.display_count;this.dataLength>this.display_count&&($(this.element.find(".left")[0]).show(),$(this.element.find(".right")[0]).show()),$(this.element.find("li")).show();for(var e=0;e<this.dataLength;e++)e>=i&&t.dataSource[e].pass===!1&&$(this.element.find("li")[e]).hide(),e>=i&&t.dataSource[e].pass===!0&&($(this.element.find("li")[e]).show(),$(this.element.find("li")[e-i]).hide());var s=this.element.find(".pass").length;0!=s&&s!=this.dataLength&&($(this.element.find("li")[s-1+1]).show(),$(this.element.find("li")[s-1+1-i]).hide())},_create:function(){this.inita(),this._resize(),this._delegateEvent()},inita:function(){var a=(this.display_count,this.options);this.dataLength=0,a.dataSource&&a.dataSource.length>0&&(this.dataLength=a.dataSource.length),this.element.append(t);for(var o=0;o<this.dataLength;o++){if("boolean"!=typeof a.dataSource[o].pass)return void fish.error("pass 参数传递不是 boolean类型");if("string"!=typeof a.dataSource[o].name)return void fish.error("name 参数传递不是 string类型");if("string"!=typeof a.dataSource[o].time)return void fish.error("time 参数传递不是 string类型");s=$(s).append(n),$($(s).find(".step-title")[o]).text(a.dataSource[o].name),$($(s).find(".step-time")[o]).text(a.dataSource[o].time),a.dataSource[o].pass===!0&&$($(s).find("li")[o]).addClass("pass")}$($(s).find("li")[0]).addClass("first-line"),$($(s).find("li")[this.dataLength-1]).addClass("last-line"),e=$(e).append(s),this.element.append(e),e='<div class="step-cont"></div>',s='<ul class="row clearfix"></ul>',this.element.append(i)},_delegateEvent:function(){var t=this;t.options;this._on({'click [btn="left"]':"_leftButton"}),this._on({'click [btn="right"]':"_rightButton"}),this._bindItemEvent()},_bindItemEvent:function(){for(var t=this,i=t.options,e=$(this.element).find("li .step-dot-cont"),s=0,n=e.length;s<n;s++)!function(s){$(e[s]).on("click",function(e){return t._trigger("clickitem",e,i.dataSource[s]),!1})}(s)},_leftButton:function(){var t=this,i=t.options,e=0;i.dataSource&&i.dataSource.length>0&&(e=i.dataSource.length);for(var s=this.element.find("li"),n=0,a=s.length;n<a;n++){if(0==n&&"list-item"==$(s[n]).css("display")){fish.info("已移到最前");break}"list-item"==$(s[n]).css("display")&&($(s[n-1]).show(),$(s[n+(this.display_count-1)]).hide())}},_rightButton:function(){var t=this,i=t.options,e=0;i.dataSource&&i.dataSource.length>0&&(e=i.dataSource.length);for(var s=this.element.find("li"),n=s.length-1,a=0;n>a;n--){if(n==e-1&&"list-item"==$(s[n]).css("display")){fish.info("已移到最后");break}"list-item"==$(s[n]).css("display")&&($(s[n+1]).show(),$(s[n-(this.display_count-1)]).hide())}},reloadData:function(t){var i=this;this.element.empty(),this.options.dataSource=t,i.inita(),i._resize()}})}();
!function(){"use strict";function t(t){this.$content.is(t.target)||$.contains(this.$content[0],t.target)||$.contains(this.$container[0],t.target)||this.hide()}$.combo.prototype.create=function(){var t=this.options;t.width&&"auto"!=t.width?this.$content.css("width",t.width):this.$content.css("width",this.$container.outerWidth()),$("body").append(this.$content),this.$content.hide()},$.combo.prototype.show=function(){this.$content.show(),this.$content.position({my:"left top",at:"left bottom",of:this.$container,collision:"fit flip"});var i=this.options;i.width&&"auto"!=i.width?this.$content.css("width",i.width):this.$content.css("width",this.$container.outerWidth()),$("body").on("mousedown",$.proxy(t,this))}}();
!function(){"use strict";$.widget("ui.combobox",$.ui.combobox,{attr_code:null,parent_dom:null,_init:function(){this.options;this._super()}})}();
!function(){"use strict";$.widget("ui.combogrid",$.ui.combogrid,{value:function(){var i=this;if(!arguments[0])return $.isArray(this._value)?this.options.dataValueField?$.map(this._value,function(t){return t[i.dataValueField]}):this._value:this._value&&this.options.dataValueField?this._value[this.dataValueField]:this._value;var t=arguments[0],e=this.gridContainer.grid("getGridParam").data;if(_.isArray(t))_.isArray(t)&&this.options.gridOpt.multiselect&&(this.gridContainer.grid("setAllCheckRows",!1),this.gridContainer.grid("setCheckRows",t,!0),this._value=fish.filter(e,function(e){return fish.indexOf(t,e[i.dataValueField])!==-1}),this._setTextByValue());else{var a=fish.findIndex(e,function(e){return e[i.dataValueField]==t});this.gridContainer.grid("setSelection",e[a]),e[a]?this._value=e[a]:_.isObject(t)&&t[i.dataValueField]&&(this._value=t),this._setTextByValue()}}})}();
!function(){"use strict";var e={};e.fileapi=void 0!==$("<input type='file'/>").get(0).files,e.formdata=void 0!==window.FormData,$.widget("ui.form",$.ui.form,{formToArray:function(){var a=[];if(0===this.length)return a;var i,t=this.element[0],l=t.elements;if(!l||!l.length)return a;var r,n,u,f,p,s,m;for(r=0,s=l.length;r<s;r++)if(p=l[r],u=p.name){f=$.fieldValue(p,!0);var o=$.data(p,"formfield");if(o){var v=o._formGetValue();_.isUndefined(v)||(f=v)}if(f&&f.constructor==Array)for(i&&i.push(p),n=0,m=f.length;n<m;n++)a.push({name:u,value:f[n]});else if(e.fileapi&&"file"==p.type){i&&i.push(p);var h=p.files;if(h.length)for(n=0;n<h.length;n++)a.push({name:u,value:h[n],type:p.type});else a.push({name:u,value:"",type:p.type})}else null!==f&&"undefined"!=typeof f&&(i&&i.push(p),a.push({name:u,value:f,type:p.type,required:p.required}))}if(t.clk){var d=$(t.clk),y=d[0];u=y.name,u&&"image"==y.type&&(a.push({name:u,value:d.val()}),a.push({name:u+".x",value:t.clk_x},{name:u+".y",value:t.clk_y}))}return a}})}();
!function(){"use strict";$.widget("ui.listform",{datalist:[],formlist:[],options:{templates:"",selector:"",data:[],firsthide:[],firstshow:[],forminit:$.noop,alwaysshow:!1},_init:function(){var t=this.options;t.selector||t.templates?(t.selector&&!t.templates&&(t.templates=$(t.selector).html()),this.reloadData(t.data)):console.error("ListForm未能初始化，请检查配置！")},reloadData:function(t){$.isArray(t)&&(this.datalist=t),this._reloadData()},_reloadData:function(){var t=this,i=t.datalist;this.cleanData();$(t.options.templates);0==i.length&&t.options.alwaysshow&&t.addForm();for(var o=0;o<i.length;o++){var s=i[o];t.addForm(s,o)}},cleanData:function(){this.formlist.length>0&&(_.each(this.formlist,function(t){t.find("form").form("destroy")}),this.formlist=[]),this.datalist=[],this.element.empty()},addForm:function(t,i){t=t||{};var o=this,s=o.formlist.length,e=$(o.options.templates);this.element.append(e);var n=e.find("form");if($.isFunction(o.options.forminit)){var a=fish.bind(o.options.forminit,e);a(t,i)}0==s?(o.options.firsthide.length>0&&_.each(o.options.firsthide,function(t){e.find(t).hide()}),o.options.firstshow.length>0&&_.each(o.options.firsthide,function(t){e.find(t).show()})):o.options.firstshow.length>0&&_.each(o.options.firsthide,function(t){e.find(t).hide()}),n.each(function(i){$(this).form(),_.isObject(t)&&$(this).form("value",t)}),o.formlist.push(e)},value:function(t){if(t)this.reloadData(t);else{var i=[];if(this.formlist.length>0)return _.each(this.formlist,function(t){var o={};t.find("form").each(function(){$.extend(o,$(this).form("value"))}),i.push(o)}),i}}})}();
!function(){"use strict";$.widget("ui.grid",$.ui.grid,{reloadData:function(t){if(t){var e=$.isArray(t)?"local":"json";$(this.element).grid("setGridParam",{datatype:e})}this._super(t)},_create:function(){var t=this;t._super()},_init:function(){var t=this;if(t.options.url&&"string"==typeof t.options.url){var e=t.options.url,a=e.lastIndexOf(".do");if(a>0&&a+3===str.length);else{var i=t.options.url.split("."),o=i[0],r=i[1];e=o+"/"+r+".do"}t.options.datatype="json",t.options.jsonReader={root:"list",page:"pageNum",total:"pages",records:"total",id:"id",userdata:"userdata"},t.options.param||(t.options.param={}),t.options.pageData=function(){return function(a,i,o,r,s,n){var p=$.extend({},t.options.param);return p.page=a,p.rowNum=i,p.sortName=o,p.sortOrder=r,p.pageNum=a,p.pageSize=i,p.pageSize=i,p.filterCol=t.options.filterCol,p.filterVal=t.options.filterVal,s&&(p.filterCol=s),n&&(p.filterVal=n),fish.post(e,p,function(e){e&&t.reloadData(e)}),!1}}()}t._super(),t.options.pageData&&$(this.element).grid("populatePage")},toPage:function(t){$(this.element).grid("setGridParam",{page:t}),$(this.element).grid("populatePage")}})}();
!function(){"use strict";var t='<div class="form-group col-md-12">\n\t\t\t<div class="input-group">\n\t\t\t\t<span class="input-group-addon">\n\t\t\t\t\t<i class="search-icon iconfont icon-search"></i>\n\t\t\t\t</span>\n\t\t\t\t<input type="text" class="form-control hyperselect-search" placeholder="搜索内容">\n\t\t\t</div><ul class="dropdown-list ui-multiselect-results" style="width:100%;max-height:190px;position:relative;border:0;display:none;"></ul>\n\t\t</div>';$.widget("ui.hypercombotree",$.ui.combotree,{options:{loadmode:"all",loader:$.noop,search:$.noop,searchtag:""},_cpLock:!1,_inputval:"",_create:function(){var e=this.options,o=this;o._super();var r=$(t);o.$dropdown=r.find(".dropdown-list"),o.treeContainer.css("max-height","165px");var n=function(t){if(!t)return void o._hideDropdown(!0);var r=e.search(t),n=o.treeContainer.tree("option"),i=n.data.key.name;if(_.isArray(r)&&r.length>0)o._showDropdown(r);else if(e.search==$.noop){var a=o.treeContainer.tree("getNodesByParamFuzzy",i,t);o._showDropdown(a)}};r.find("input").on("compositionstart",function(){o._cpLock=!0}),r.find("input").on("compositionend",function(){o._cpLock=!1;var t=$(this).val();n(t)}),r.find("input").on("input",function(t){if(o._cpLock)return!1;var e=$(this).val();return o._inputval!=e&&(o._inputval=e,void n(e))}),this.comboTree.$content.prepend(r)},_showDropdown:function(t,e){var o=this,r=o.treeContainer.tree("option"),n=r.data.key.name;e||o._clearDropdown(),_.isArray(t)&&t.length>0&&(_.each(t,function(t){t[n]=t[n]?t[n]:"无节点名称";var e='<span style="float:right;">';o.options.searchtag&&("string"==typeof o.options.searchtag&&(e+=t[o.options.searchtag]),$.isFunction(o.options.searchtag)&&(e+=o.options.searchtag(t))),e+="</span>";var r=$("<li>"+t[n]+e+"</li>");r.data("node",t),o.$dropdown.append(r)}),o.$dropdown.find("li").click(function(){var t=$(this).data("timeout"),e=!1;if(!t){$(this).data("timeout","start");var r=$(this);return setTimeout(function(){"start"==r.data("timeout")&&(r.data("timeout","single"),r.click())},300),!1}"start"==t&&(e=!0),$(this).data("timeout","");var i=$(this).data("node"),a=o.treeContainer.tree("getNodeByParam",n,i[n]);if(!a){var s=o.options.loader(i);if(o.loadpath=s,$.isArray(s)&&s.length>0){var d=o.treeContainer.tree("getNodeByParam",n,s[0][n]);if(d){if(s.shift(),"all"==o.options.loadmode)return void o.treeContainer.tree("asyncPath",s,d,i);for(var c=!1;s.length>0;){var l=s.shift();if(!l)break;l[n]==i[n]&&(c=!0),o.treeContainer.tree("getNodeByParam",n,l[n])||(d.zAsync=!0,o.treeContainer.tree("addNodes",d,l)),d=o.treeContainer.tree("getNodeByParam",n,l[n])}if(!c&&"all"!=o.options.loadmode){d.zAsync=!0;o.treeContainer.tree("addNodes",d,i)}a=o.treeContainer.tree("getNodeByParam",n,i[n])}else console.error("在树上加载指定节点时找不到首个节点！请检查配置及loader加载方法！")}if(!a)return void console.error("无法在树上加载指定节点！请检查配置及loader加载方法！")}o.treeContainer.tree("selectNode",a);for(var p=a.tId,h=o.treeContainer.find("#"+p);h&&!h.parent("ul").attr("data-ui-role");)h=h.parent("ul").parent("li");o.treeContainer.scrollTop(h.position().top),e&&(o.treeContainer.find("#"+p+"_check").click(),o.comboTree.$content.find("input").val(""),o._clearDropdown())})),o.$dropdown.show()},_hideDropdown:function(t){var e=this;t&&e._clearDropdown(),e.$dropdown.hide()},_clearDropdown:function(){var t=this;t.$dropdown.empty()},_onTreeClick:function(t){this.selectNodes;this.selectNodes=this.treeContainer.tree("getSelectedNodes");var e,o,r=[],n=this.selectNodes.length,i=t.target.id.slice(0,t.target.id.lastIndexOf("_")),a=this.treeContainer.tree("getNodeByTId",i);if(a&&!$(t.target).hasClass("switch")){for(this.selectNodes.sort(function(t,e){return t.id-e.id}),e=0;e<n;e++)r[e]=this.selectNodes[e].name;o=r.length>0?r.join(","):"",this.comboTree.$input.val(o),this.element.val(o),this._triggerChange(),this.options.closeByChooseNode&&this.comboTree.hide()}}})}();
!function(){"use strict";var t='\n    <div>\n    <ul class="ui-multiselect-choices">\n        <li class="search-field">\n            <input type="text" readOnly="true" autocomplete="off"/>\n        </li>\n    </ul>\n    </div>',e='<div class="dropdown-list">\n\t\t<div class="form-group col-md-12">\n\t\t\t<div class="input-group">\n\t\t\t\t<span class="input-group-addon">\n\t\t\t\t\t<i class="search-icon iconfont icon-search"></i>\n\t\t\t\t</span>\n\t\t\t\t<input type="text" style="width:90%;margin-right:10px;" class="form-control hyperselect-search" placeholder="搜索内容"><button type="button" class="btn btn-default js_btn"><span class="glyphicon glyphicon-chevron-left"></span></button>\n\t\t\t</div>\n\t\t</div>\n\t\t<ul class="dropdown-list ui-multiselect-results" style="width:100%;max-height:190px;position:relative;border:0"></ul>\n\t\t\n\t</div>';$.widget("ui.hypermultiselect",$.ui.multiselect,{options:{catalog_data:[],element_data:[],children:"children",getCatalog:$.noop,getElement:$.noop,url:""},_init:function(){this._super()},_setUpHtml:function(){var i,s,n=this.options,l=this;if(i=["ui-multiselect-container"],n.inheritClasses&&this.element[0].className&&i.push(this.element[0].className),s={class:i.join(" "),title:this.element[0].title},this.element[0].id&&(s.id=this.element[0].id.replace(/[^\w]/g,"_")+"_multi"),this.container=$(t).attr(s),this.element.hide().after(this.container),this.$ul=this.container.find(".ui-multiselect-choices").first(),this.$li=this.container.find("li.search-field").first(),this.$input=this.container.find("input").first().val(n.placeholder),this.$menu=$(e),n.dataSource&&n.dataSource.length&&this._setDataSource(n.dataSource),n.url&&n.url.indexOf(".")>=0){var u=(n.url.split(".")[0],n.url.split(".")[1]);fish.post(classname+"/"+u,{},function(t){n.dataSource=t,l._setDataSource(n.dataSource)})}this._menuBuild(),this._setTabIndex(),this._setLabelBehavior()},_search:function(t){return t||(t=""),this._super(t)},_updateMenu:function(t){return this.$menu.find("ul.dropdown-list").html(t)},_delegateEvent:function(){var t=this;this.options;this._on(this.container,{click:"_open",mouseenter:function(e){t._mouseOn=!0},mouseleave:function(e){t._mouseOn=!1}}),this._on(this.$menu,{mouseup:"menuMouseup",mouseenter:function(e){t._mouseOn=!0},mouseleave:function(e){t._mouseOn=!1}}),this.$menu.on("input",".hyperselect-search",function(){var e=fish.bind(t._oninput,t);return e($(this).val())}),this.$menu.on("keydown",".hyperselect-search",function(e){var i=fish.bind(t._keydown,t);return i(e)}),this.$menu.on("click",".js_btn",function(t){if($(".ui-multiselect-choices").find("li").length>1){var e=$(".ui-multiselect-choices").find("li").length-2;$(".ui-multiselect-choices").children()[e].remove()}}),this._on(this.$input,{blur:"_blur",focus:"_focus",cut:"_clipboard",paste:"_clipboard"}),this._on(this.$ul,{"click .close":function(e){if(e.preventDefault(),e.stopPropagation(),!t.is_disabled)return t._deleteMenu($(e.currentTarget))}})},_oninput:function(t){t=t||this.$input.val(),this._searchFieldScale(),this.winnow_results(t)},results_show:function(t){return this.$menu.find(".hyperselect-search").val(""),this._super(t)},_keydown:function(t){var e,i,s=$.ui.keyCode;switch(e=null!=(i=t.which)?i:t.keyCode,this._searchFieldScale(),8!==e&&this.pending_backstroke&&this.clear_backstroke(),e){case s.BACKSPACE:var n=$(t.target);if(!n.val()&&this._choicesCount()>0);else if(!this.pending_backstroke)return this._clearHighlightMenu(),this._search(n.val().slice(0,-1));break;case s.TAB:this._tabHandler(t);break;case s.ENTER:if(t.preventDefault(),this.results_showing)return this._selectMenu(t);break;case s.ESCAPE:return this.results_showing&&this.results_hide(),!0;case s.UP:t.preventDefault(),this.keyup_arrow();break;case s.DOWN:t.preventDefault(),this.keydown_arrow()}}})}();
!function(){"use strict";$.widget("ui.label",$.ui.label,{_create:function(){var t=this.options.width,i=this.options.id;this._super(),"number"==typeof t&&$($(this._contentElement).find(".label-title")[0]).css("width",t),void 0===i&&null===i||$(this._contentElement).attr("id",i);var e=this.options.target;void 0===e&&null===e||($(this._contentElement).attr("data-toggle","modal"),$(this._contentElement).attr("data-target",e))},_delegateEvent:function(){var t=this;t.options;this._on(this._contentElement.find("button"),{click:function(i){t.close(i)}}),this._on(this._contentElement,{click:function(i){"button"===i.target.nodeName||$(i.target).hasClass("glyphicon-remove")||t._click(i)}})},_click:function(t){this._trigger("click",t,this)},close:function(t){var i=this.options.optClose;this._trigger("close",t,this),i||this.destroy()}})}();
!function(){"use strict";$.widget("ui.pagination",$.ui.pagination,{_create:function(){this._super(),$.extend(this.options,{pgtextClass:"pgtext hidden-xs hidden-sm",pgrectextClass:"pgtext hidden-xs hidden-sm"})}})}();
!function(){"use strict";$.widget("ui.tabs",$.ui.tabs,{options:{templateArr:["<li><a href='#{href}'><button type='button' class='ui-tabs-close close' role='button'><span aria-hidden='true' title='close'>&times;<span class='sr-only'>Close</span></span></button>#{label}</a></li>","<li><a href='#{href}'>#{label}<button type='button' class='ui-tabs-close ui-tabs-main-close close' role='button'><span aria-hidden='true' title='close' class='glyphicon glyphicon-remove-sign'></span></button></a></li>"]},_processTabs:function(){var t=this,s=this.tabs,a=this.anchors,i=this.panels;this.tablist=this._getList().addClass("ui-tabs-nav").attr("role","tablist").delegate("> li","mousedown"+this.eventNamespace,function(t){$(this).is(".ui-state-disabled")&&t.preventDefault()}).delegate(".ui-tabs-anchor","focus"+this.eventNamespace,function(){$(this).closest("li").is(".ui-state-disabled")&&this.blur()}),this.lastTablistWidth=this.tablist.width(),this.tabs=this.tablist.find("> li:has(a)").not(".ui-tabs-paging-prev,.ui-tabs-paging-next").addClass("ui-state-default").attr({role:"tab",tabIndex:-1}),this._visibleTabs=this.tabs.filter(function(t,s){return!$(s).hasClass("ui-tabs-hidden")}),this.anchors=this.tabs.map(function(){return $("a",this)[0]}).addClass("ui-tabs-anchor").attr({role:"presentation",tabIndex:-1}),this.panels=$(),this.anchors.each(function(s,a){var i,e,n,l=$(a).uniqueId().attr("id"),o=$(a).closest("li"),r=o.attr("aria-controls");t._isLocal(a)?(i=a.hash,n=i.substring(1),e=t.element.find(t._sanitizeSelector(i))):(e=t.element.find("div.ui-tabs-panel:eq("+s+")"),n=e.attr("id"),n||(n=o.attr("aria-controls")||$({}).uniqueId()[0].id,e.attr("id",n)),i="#"+n,$(a).attr("href",i),e.attr("aria-live","polite")),e.length&&(t.panels=t.panels.add(e)),r&&o.data("ui-tabs-aria-controls",r),o.attr({"aria-controls":n,"aria-labelledby":l}),e.attr("aria-labelledby",l)}),this.panels.addClass("ui-tabs-panel").attr("role","tabpanel"),s&&(this._off(s.not(this.tabs)),this._off(a.not(this.anchors)),this._off(i.not(this.panels))),this.options.fixedHeight&&this.panels.addClass("ui-tabs-panel-absolute")},_getList:function(){return this.tablist||this.element.find("ol,ul").eq(0)},_create:function(){var t=this.options;t.style&&_.isFinite(t.style)||(t.style=1),t.paging&&(t.paging={nextButton:'<span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>',prevButton:'<span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>'}),t.tabCanCloseTemplate=t.templateArr[parseInt(t.style,10)],this._super()}})}();
!function(){"use strict";$.widget("ui.bsstooltip",$.ui.tooltip,{_create:function(){this.enabled=!0,this.options.type&&"mobile"==this.options.type?(this.onUs=!1,this.outTimeout=null,this._on({click:"openHandler"}),this._on($(document),{click:"closeHandler"}),this._on({input:"_setContentNoHide"}),this.options.title=function(){var t=$(this).val(),i=""+t;return t.length>3&&(i=t.substring(0,3)+" "),i+=t.substring(3).length>4?t.substring(3,7)+" "+t.substring(7):t.substring(3)},this.fixTitle()):this._super()},_setContentNoHide:function(){var t=this.tip(),i=this.getTitle();t.find(".tooltip-inner")[this.options.html?"html":"text"](i),this.options.fontsize||(this.options.fontsize="20px"),t.css("font-size",this.options.fontsize),i?this.show():this.hide()}})}();
!function(){"use strict";$.widget("ui.tree",$.ui.tree,{loadpath:null,_create:function(){var a=this,t=a.options;t.callback||(t.callback={});var s=t.callback?t.callback.onAsyncSuccess:null;s||(s=$.noop);var e=function(e,n,l,i){if($.isArray(a.loadpath)){var o=t.data.key.name;if(a.loadpath.length>0){var r=a.loadpath.shift(),c=a.getNodeByParam(o,r[o]);a.expandNode(c,!0)}else{var h=a.getNodeByParam(o,a.finalnode[o]);a.selectNode(h),a.pathcallback(h),a.loadpath=null,a.finalnode=null,a.pathcallback=null}}s(e,n,l,i)};t.callback.onAsyncSuccess=e,a._super(),!t.async.enable||t.fNodes&&0!=t.fNodes.length||a._asyncNode(null,!1,$.noop)},asyncPath:function(a,t,s,e){var n=this;$.isArray(n.loadpath)?console.error("一个tree一次只能接受一轮链式展开！"):(n.loadpath=a,n.finalnode=s,n.pathcallback=e||$.noop,n.expandNode(t,!0))},_asyncNode:function(a,t,s){var e,n;if(a&&!a.isParent)return this._apply(s),!1;if(a&&a.isAjaxing)return!1;if(0==this._apply(this.p.callback.beforeAsync,[null,a],!0))return this._apply(s),!1;if(a){a.isAjaxing=!0;var l=this.$(a,this.consts.id.ICON);l.attr({style:"",class:this.consts.className.BUTTON+" "+this.consts.className.ICO_LOADING})}var i={};for(e=0,n=this.p.async.autoParam.length;a&&e<n;e++){var o=this.p.async.autoParam[e].split("="),r=o;o.length>1&&(r=o[1],o=o[0]),i[r]=a[o]}if(fish.isArray(this.p.async.otherParam))for(e=0,n=this.p.async.otherParam.length;e<n;e+=2)i[this.p.async.otherParam[e]]=this.p.async.otherParam[e+1];else for(var c in this.p.async.otherParam)i[c]=this.p.async.otherParam[c];var h=this._getRoot()._ver,p=this.p.async.url.split("."),d=this;return fish.post(p[0]+"/"+p[0],i,function(e){if(h==d._getRoot()._ver){var n=[];try{n=e&&0!=e.length?e:[]}catch(a){n=e}a&&(a.isAjaxing=null,a.zAsync=!0),d._setNodeLineIcos(a),n&&""!==n?(n=d._apply(d.p.async.dataFilter,[a,n],n),d._addNodes(a,n?$.tree.clone(n):[],!!t)):d._addNodes(a,[],!!t),d._trigger(d.consts.event.ASYNC_SUCCESS,[a,e]),d._apply(s),d._apply(d.p.callback.onAsyncSuccess,[null,d.treeId,a,e])}},function(){h==d._getRoot()._ver&&(a&&(a.isAjaxing=null),d._setNodeLineIcos(a))}),!0},transformToSimpleData:function(a){var t=[],s=this.options,e=s.data.simpleData.idKey,n=s.data.simpleData.pIdKey,l=s.data.key.name;return $.isArray(a)&&_.each(a,function(a){t.push(_.pick(a,e,n,l))}),t}})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
